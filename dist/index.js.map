{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar absf = require( '@stdlib/math-base-special-absf' );\nvar minf = require( '@stdlib/math-base-special-minf' );\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum absolute single-precision floating-point number.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} minimum absolute value\n*\n* @example\n* var v = minabsf( -3.14, 4.2 );\n* // returns ~3.14\n*\n* @example\n* var v = minabsf( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = minabsf( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction minabsf( x, y ) {\n\treturn minf( absf( float64ToFloat32( x ) ), absf( float64ToFloat32( y ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = minabsf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum absolute single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-minabsf\n*\n* @example\n* var minabsf = require( '@stdlib/math-base-special-minabsf' );\n*\n* var v = minabsf( -3.14, 4.2 );\n* // returns ~3.14\n*\n* v = min( 3.14, NaN );\n* // returns NaN\n*\n* v = min( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar minabsf = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minabsf;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAmB,QAAS,wCAAyC,EAwBzE,SAASC,EAASC,EAAGC,EAAI,CACxB,OAAOJ,EAAMD,EAAME,EAAkBE,CAAE,CAAE,EAAGJ,EAAME,EAAkBG,CAAE,CAAE,CAAE,CAC3E,CAKAN,EAAO,QAAUI,ICfjB,IAAIG,EAAU,IAKd,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "absf", "minf", "float64ToFloat32", "minabsf", "x", "y", "minabsf"]
}
